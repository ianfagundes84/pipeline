trigger:
- develop

pool:
  vmImage: 'macOS-latest'

variables:
  scheme: 'Pipeline'
  xcWorkspacePath: '$(Build.SourcesDirectory)/Pipeline/Pipeline.xcworkspace'
  IPA_NAME: 'Pipeline.ipa'
  APP_VERSION: '1'

resources:
  repositories:
  - repository: Pipeline
    type: github
    name: ianfagundes84/pipeline
    endpoint: ianfagundes84
    ref: refs/heads/main

steps:
- checkout: Pipeline

- script: |
    ls -la $(Build.SourcesDirectory)
  displayName: 'List project files'

- script: |
    ls -la $(Build.SourcesDirectory)/Pipeline
  displayName: 'List files in Pipeline directory for diagnostic'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'CertificatesDistribution.p12'
    certPwd: '$(P12_PASSWORD)'
    keychain: 'temp'

- task: InstallAppleProvisioningProfile@1
  displayName: 'Install Apple Provisioning Profile'
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'appstorepipeline.mobileprovision'

- script: |
    rm -rf ~/Library/Developer/Xcode/DerivedData/
    xcodebuild clean
  displayName: 'Clean Xcode data'

- script: |
    # Ensure directories
    mkdir -p "$(Build.SourcesDirectory)/build/"
    chmod 755 "$(Build.SourcesDirectory)/build/"
    mkdir -p "$(Build.ArtifactStagingDirectory)/"
    chmod 755 "$(Build.ArtifactStagingDirectory)/"
    
    for target in Pipeline 
    do
        echo "Processing target: $target"
        infoPlistPath="$(Build.SourcesDirectory)/$target/Info.plist"
        chmod 644 $infoPlistPath
        /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $(BUNDLE_ID)" $infoPlistPath || echo "Failed to set Bundle Identifier"
        /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string $APP_VERSION" "$infoPlistPath" || echo "Failed to set Bundle Version"
        
        xcodebuild archive -workspace $(xcWorkspacePath) -scheme $target -archivePath $(Build.SourcesDirectory)/build/$target.xcarchive
        xcodebuild -exportArchive -archivePath $(Build.SourcesDirectory)/build/$target.xcarchive -exportOptionsPlist $(Build.SourcesDirectory)/Pipeline/ExportOptions.plist -exportPath $(Build.ArtifactStagingDirectory)/
        if [ ! -f $(Build.ArtifactStagingDirectory)/$IPA_NAME-$target.ipa ]; then
            echo "Error: IPA not found for target $target!"
            exit 1
        fi
        mkdir tempIPA_$target
        unzip $(Build.ArtifactStagingDirectory)/$IPA_NAME-$target.ipa -d tempIPA_$target/
        /usr/libexec/PlistBuddy -c "Print CFBundleVersion" tempIPA_$target/Payload/$target.app/Info.plist
        echo "xcrun altool --upload-app --type ios --file $(Build.ArtifactStagingDirectory)/$IPA_NAME-$target.ipa --username $(APPLE_DEVELOPER_USERNAME) --password $(APPLE_DEVELOPER_PASSWORD)" 
    done
  displayName: 'Process and Upload Targets'
